
mixin radarLocation(model, segment, ring)
    //- 
    //- CSS
    //- 
    style(type="text/css").
        #radar-location {
            margin: 1em;
        }
        #radar-location > svg {
            height: 4em;
        }

    //- 
    //- TEMPLATE
    //- 
    #radar-location
        svg(viewBox="0 0 102 102")
            // draw an empty mini radar
            // first the ring borders
            - const theta = 360/model.segments.length
            - for (let i=0; i<model.rings.length; i++) {
                circle(cx=51 cy=51 r=i*10 + 10 stroke-width="1px" stroke="black" fill="transparent")
            - }
            // then the lines
            - for (let i=0; i<model.segments.length; i++) {
                line(x1=51 y1=51 x2=51 y2=1 stroke-width=1 stroke='black' transform=`rotate(${theta*i}, 51, 51)`)
            - }
            // finally, a special circle that "fills" the appropriate ring segment.
            // First, calculate some values...
            -
                const radius = 10*model.rings.indexOf(ring)+5
                const circumference = 2 * Math.PI * radius
                offset = 0.25 * circumference // needed to let the circle begin at top, not right
                const dashLen = (theta / 360) * circumference
                const dashPause = circumference - dashLen
                const rotate = theta*model.segments.indexOf(segment)
            // draw the circle
            circle(cx=51 cy=51 r=radius stroke-dasharray=`${dashLen}, ${dashPause}` stroke-dashoffset=offset stroke="black" stroke-width="10px" fill="none", transform=`rotate(${rotate}, 51, 51)`)
            //- - const rotate = 
            //- draw a circle with a dashed line 
            // ... and then rotated according to the project's segment.
