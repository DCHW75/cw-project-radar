extends _modal

include ../../common/views/widgets/lifecycle.pug
include ../../common/views/widgets/metric.pug
include ../../common/views/widgets/mtrlPerfScale.pug
include ../../common/views/widgets/radarLocation.pug
include ../../common/views/widgets/radarPosition.pug

//-
//- MIXINS
//-

//- 
//- CSS
//- 
block append styles
    style(type="text/css").
        /*
         * Project info modal
         */
        /* Title */
        #projectInfo .prjTitle {
            font-size: 1.1em;
            text-align: center;
            font-weight: 700;
        }
        /* Project teaser text */
        #projectInfo .prjTeaser {
            margin-bottom: 0.5em;
        }
        /*
         * Project key metrics
         */
        #projectInfo .prjMetrics {
            display: flex;
            justify-content: space-around;
            padding-bottom: 1em;
            border-bottom: 1px solid lightgray;
        }
        #projectInfo .prjMetrics > .metric {
            flex: 1 0 0px;
            border-right: 1px solid lightgrey;
        }
        #projectInfo .prjMetrics > .metric:last-child {
            border-right: none;
        }
        /*
         * Statistics pane
         */
        #projectInfo .stats {
            display: flex;
            padding-top: 1em;
        }
        #projectInfo .stats .label {
            text-align: center;
            font-weight: 700;
        }
        /*
         * MTRL score pane
         */
        #projectInfo .stats > .performance {
            flex: 0.5 0.5 0px;
            border-right: 1px solid lightgray;
        }
        #projectInfo .stats > .performance > .mtrl {
            display: flex;
            justify-content: space-around;
        }
        #projectInfo .stats > .performance > .mtrl > .metric {
            border-right: 1px solid lightgray;
            flex: 1 0 0px;
        }
        #projectInfo .stats > .performance > .mtrl > .metric:last-child {
            border-right: none;
        }
        /*
         * Project radar metrics
         */
        #projectInfo .stats > .metrics {
            flex: 0.5 0.5 0px;
        }
        #projectInfo .stats > .metrics > .radar {
            display: flex;
            flex-wrap: wrap;
            justify-content: center; 
            align-items: flex-start;
        }
        /* Radar position grid */
        #projectInfo .stats > .metrics #radar-position {
        }
        /* Radar position radar */
        #projectInfo .stats > .metrics #radar-location {
            margin-left: 0em;    /* Somehow in flexboxes margins don't overlap... */
        }
        /* Project lifecycle */
        #projectInfo .stats > .metrics #lifecycle {
            flex: 1 0 0px;
            margin-top: 0em;    /* Somehow in flexboxes margins don't overlap... */
            margin-bottom: 0em; /* Somehow in flexboxes margins don't overlap... */
        }

//-
//- HEADER
//-
block header 
    - console.log(project)
    if (project.cwurl)
        div 
            !=project.cw_id 
            |. 
            a(href=project.cwurl target='_blank') #{header}
    else 
        div #{header}

//-
//- FOOTER
//-
block footer
    div #{footer}

//-
//- MAIN CONTENT
//-
block content
    .prjTitle  #{project.title}
    .prjTeaser #{project.teaser}
    //- Key project metrics pane
    .prjMetrics
        +metric('Start date', new Date(project.startDate).toLocaleDateString('en-GB', { month: 'short', year: 'numeric'  }))
        +metric('End date', new Date(project.endDate).toLocaleDateString('en-GB', { month: 'short', year: 'numeric'  }))
        +metric('Budget', new Intl.NumberFormat('en-GB', {style: 'currency', currency: 'EUR'}).format(project.budget))
        +metric('Funding call', project.call)
        +metric('Funding call', project.type)
    //- Project statistics pane
    .stats
        .performance
            - if (scale)
                .label Relative performance
                +mtrlPerfScale(scale)
                .mtrl
                    +metric('MRL', blip.mrl)
                    +metric('TRL', blip.trl)
                    +metric('Performance', blip.performance)
        .metrics
            .label Project metrics
            .radar
                +radarPosition(blip.segment, blip.ring)
                +radarLocation(model, blip.segment, blip.ring, radiiFunc)
            +lifecycle(model, blip.ring)
